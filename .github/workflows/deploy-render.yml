name: Deploy to Render

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
    types: [ closed ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Render
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
      run: |
        echo "üöÄ Triggering Render deployment for service ID: $RENDER_SERVICE_ID"
        echo "üì° Deploying service: closer-app"
        
        # Trigger deployment using Render API with better error handling
        response=$(curl -s -w "\n%{http_code}" -X POST \
          "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys" \
          -H "Authorization: Bearer $RENDER_API_KEY" \
          -H "Content-Type: application/json" \
          -d '{
            "clearCache": false
          }')
        
        # Extract response body and status code
        http_code=$(echo "$response" | tail -n1)
        response_body=$(echo "$response" | head -n -1)
        
        echo "ÔøΩ HTTP Status Code: $http_code"
        echo "üì¶ Response: $response_body"
        
        # Check if deployment was successful
        if [ "$http_code" -eq 201 ] || [ "$http_code" -eq 200 ]; then
          echo "‚úÖ Deployment triggered successfully!"
        else
          echo "‚ùå Failed to trigger deployment"
          echo "Response: $response_body"
          exit 1
        fi

  notify:
    runs-on: ubuntu-latest
    needs: deploy
    if: always()
    
    steps:
    - name: Notify deployment status
      run: |
        if [ "${{ needs.deploy.result }}" == "success" ]; then
          echo "üéâ Deployment triggered successfully!"
          echo "Your app will be live in a few minutes at: https://closer-app.onrender.com"
        else
          echo "‚ùå Deployment failed. Check the logs above."
        fi
