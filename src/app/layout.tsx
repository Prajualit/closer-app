// Ensure this is a client component if any child is a client component
'use client';

import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { GoogleOAuthProvider } from "@react-oauth/google";
import ReduxProvider from "../redux/reduxProvider";
import AuthWrapper from "../lib/AuthWrapper";
import { SocketProvider } from "../lib/SocketContext";
import { Toaster } from "../components/ui/toaster";
import { ThemeProvider } from "../contexts/ThemeContext";
import type { ReactNode } from "react";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata = {
  title: "Closer",
  description: "Generated by create next app",
};

export default function RootLayout({ children }: { children: ReactNode }) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased bg-white dark:bg-neutral-900 text-neutral-900 dark:text-white transition-colors duration-300`}
      >
        <ThemeProvider>
          <GoogleOAuthProvider clientId={process.env.GOOGLE_CLIENT_ID!}>
            <ReduxProvider>
              <SocketProvider>
                <AuthWrapper>{children}</AuthWrapper>
                <Toaster />
              </SocketProvider>
            </ReduxProvider>
          </GoogleOAuthProvider>
        </ThemeProvider>
      </body>
    </html>
  );
}
